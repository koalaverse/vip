
R version 4.2.3 (2023-03-15) -- "Shortstop Beagle"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "SAEforest"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('SAEforest')
The legacy packages maptools, rgdal, and rgeos, underpinning the sp package,
which was just loaded, will retire in October 2023.
Please refer to R-spatial evolution reports for details, especially
https://r-spatial.org/r/2023/05/15/evolution4.html.
It may be desirable to make the sf package available;
package maintainers should consider adding sf to Suggests:.
The sp package is now running under evolution status 2
     (status 2 uses the sf package in place of rgdal)
Please note that 'maptools' will be retired during October 2023,
plan transition at your earliest convenience (see
https://r-spatial.org/r/2023/05/15/evolution4.html and earlier blogs
for guidance);some functionality will be moved to 'sp'.
 Checking rgeos availability: TRUE
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("MERFranger")
> ### * MERFranger
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: MERFranger
> ### Title: Main function for unit-level MERF
> ### Aliases: MERFranger
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("SAEforestObject")
> ### * SAEforestObject
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SAEforestObject
> ### Title: Fitted 'SAEforest' object
> ### Aliases: SAEforestObject
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("SAEforest_model")
> ### * SAEforest_model
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SAEforest_model
> ### Title: Main function for the estimation of domain-level (nonlinear)
> ###   indicators with MERFs
> ### Aliases: SAEforest_model
> 
> ### ** Examples
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("map_indicators")
> ### * map_indicators
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: map_indicators
> ### Title: Visualizes disaggregated estimates on a map
> ### Aliases: map_indicators
> 
> ### ** Examples
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("plot.SAEforest")
> ### * plot.SAEforest
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plot.SAEforest
> ### Title: Plot function for a 'SAEforest' object
> ### Aliases: plot.SAEforest
> 
> ### ** Examples
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("summarize_indicators")
> ### * summarize_indicators
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: summarize_indicators
> ### Title: Presents point, MSE and CV estimates
> ### Aliases: summarize_indicators
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("summary.SAEforest")
> ### * summary.SAEforest
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: summary.SAEforest
> ### Title: Summarizes an 'SAEforest' object
> ### Aliases: summary.SAEforest
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("tune_parameters")
> ### * tune_parameters
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: tune_parameters
> ### Title: Tuning and cross-validation of MERF parameters
> ### Aliases: tune_parameters
> 
> ### ** Examples
> 
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  1.035 0.074 1.117 0.001 0.002 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
